proxy_cache_path /var/run/openresty/cache levels=1:2 keys_zone=STATIC:10m
                 inactive=24h max_size=1g;

proxy_connect_timeout 5s;
proxy_buffering off;

proxy_read_timeout 600s;
proxy_send_timeout 600s;
error_log /dev/stdout info;
access_log /dev/stdout;
# limit_rate_after 100M;
# limit_rate 50M;

# These are unfortunately still hardcoded in go-ipfs.
# We're removing them from the upstream response so they
# don't mess with the additional header we set.
proxy_hide_header Access-Control-Allow-Headers;
proxy_hide_header Access-Control-Expose-Headers;

# We have to set this header in go-ipfs because otherwise
# it'll do it's origin check based on its defaults (localhost et al).
proxy_hide_header Access-Control-Allow-Origin;
lua_package_path "/etc/nginx/conf.d/lua/?.lua;;";
lua_shared_dict auto_ssl 1m;
lua_shared_dict auto_ssl_settings 64k;
lua_shared_dict pins 10m;
lua_shared_dict dnslink 10m;
lua_code_cache off;

init_by_lua_file "/etc/nginx/conf.d/lua/init.lua";
init_worker_by_lua_file "/etc/nginx/conf.d/lua/init_worker.lua";

resolver 127.0.0.11 ipv6=off;

upstream backend {
  server ipfs1:8080;
  keepalive 64;
}

server {
  listen 80;
  server_name _;
  set $dnslink "";
  set $proxybypass "true";

  set_by_lua_block $dnslink {
    return ngx.shared.dnslink:get(ngx.var.host)
  }

  rewrite_by_lua_file "/etc/nginx/conf.d/lua/rewrite.lua";

  location = /statusz {
    default_type  text/plain;
    content_by_lua_file "/etc/nginx/conf.d/lua/status.lua";
  }

  location = /refresh {
    default_type  text/plain;
    content_by_lua_file "/etc/nginx/conf.d/lua/refresh.lua";
  }

  location / {
    proxy_set_header X-Ipfs-Gateway-Prefix "";
    proxy_set_header Host $host;
    proxy_pass http://backend;
    proxy_buffering on;
    proxy_cache_bypass $proxybypass;
    proxy_no_cache $proxybypass;
    proxy_cache            STATIC;
    proxy_cache_use_stale  error timeout invalid_header updating
                                         http_500 http_502 http_503 http_504;
    proxy_cache_key $dnslink$uri;
    proxy_cache_valid 15m;
    add_header X-Cache-Status $upstream_cache_status;
    add_header X-Cache-Key $dnslink$uri;
    add_header X-Cache-Bypass "Bypass=$proxybypass";
  }

  #error_page  404              /404.html;
  # redirect server error pages to the static page /50x.html
  #
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/local/openresty/nginx/html;
  }
}
